(window.webpackJsonp=window.webpackJsonp||[]).push([[73],{458:function(t,s,a){"use strict";a.r(s);var n=a(27),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"javascript正则表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript正则表达式"}},[t._v("#")]),t._v(" JavaScript正则表达式")]),t._v(" "),a("h2",{attrs:{id:"特殊字符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特殊字符"}},[t._v("#")]),t._v(" 特殊字符 "),a("Badge",{attrs:{text:"部分"}})],1),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("字符")]),t._v(" "),a("th",[t._v("含义")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("^")]),t._v(" "),a("td",[t._v("开始")])]),t._v(" "),a("tr",[a("td",[t._v("$")]),t._v(" "),a("td",[t._v("结束")])]),t._v(" "),a("tr",[a("td",[t._v("？")]),t._v(" "),a("td",[t._v("等价{0,1}")])]),t._v(" "),a("tr",[a("td",[t._v("+")]),t._v(" "),a("td",[t._v("等价{1,}")])]),t._v(" "),a("tr",[a("td",[t._v("*")]),t._v(" "),a("td",[t._v("等价{0,}")])]),t._v(" "),a("tr",[a("td",[t._v("(x)")]),t._v(" "),a("td",[t._v("捕获性分组")])]),t._v(" "),a("tr",[a("td",[t._v("(?:x)")]),t._v(" "),a("td",[t._v("非捕获性分组")])]),t._v(" "),a("tr",[a("td",[t._v("[xyz]")]),t._v(" "),a("td",[t._v("可匹配字符集合")])]),t._v(" "),a("tr",[a("td",[t._v("[^xyz]")]),t._v(" "),a("td",[t._v("不可匹配字符集合")])]),t._v(" "),a("tr",[a("td",[t._v("\\d")]),t._v(" "),a("td",[t._v("等价[0-9]")])]),t._v(" "),a("tr",[a("td",[t._v("\\s")]),t._v(" "),a("td",[t._v("匹配一个空白字符")])]),t._v(" "),a("tr",[a("td",[t._v("\\w")]),t._v(" "),a("td",[t._v("匹配一个字符，等价[A-Za-z0-9]")])]),t._v(" "),a("tr",[a("td",[t._v("x|y")]),t._v(" "),a("td",[t._v("匹配'x'或'y'")])]),t._v(" "),a("tr",[a("td",[t._v("x(?=y)")]),t._v(" "),a("td",[t._v("前行肯定断言，匹配x,仅当后面紧跟的是y")])]),t._v(" "),a("tr",[a("td",[t._v("x(?!y)")]),t._v(" "),a("td",[t._v("前行否定断言，匹配x,仅当后面紧跟的不是y")])]),t._v(" "),a("tr",[a("td",[t._v("(?<=y)x")]),t._v(" "),a("td",[t._v("后行肯定断言，匹配x,仅当前面是y")])]),t._v(" "),a("tr",[a("td",[t._v("(?<!y)x")]),t._v(" "),a("td",[t._v("后行否定断言，匹配x,仅当前面不是y")])])])]),t._v(" "),a("h2",{attrs:{id:"使用正则表达式的方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用正则表达式的方法"}},[t._v("#")]),t._v(" 使用正则表达式的方法")]),t._v(" "),a("p",[a("strong",[t._v("RegExp:")])]),t._v(" "),a("ol",[a("li",[t._v("exec--返回数组，未匹配则返回null。")]),t._v(" "),a("li",[t._v("test--返回true或false。")])]),t._v(" "),a("p",[a("strong",[t._v("String：")])]),t._v(" "),a("ol",[a("li",[t._v("match--返回数组，未匹配在返回null。")]),t._v(" "),a("li",[t._v("search--返回位置索引，未匹配则返回-1")]),t._v(" "),a("li",[t._v("replace--替换匹配的子字符串。")]),t._v(" "),a("li",[t._v("split--用匹配正则的字符串分割原字符串。")]),t._v(" "),a("li",[t._v("matchAll- 和match很像，不过他返回迭代器。不常用。")])]),t._v(" "),a("h2",{attrs:{id:"方法使用举例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法使用举例"}},[t._v("#")]),t._v(" 方法使用举例")]),t._v(" "),a("h3",{attrs:{id:"regexp-test"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#regexp-test"}},[t._v("#")]),t._v(" RegExp.test()")]),t._v(" "),a("p",[a("strong",[t._v("目的")]),t._v(":查看目标字符串中是否能匹配到子串，返回true或false。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello world!'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" reg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/^hello/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n")])])]),a("h3",{attrs:{id:"regexp-exec"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#regexp-exec"}},[t._v("#")]),t._v(" RegExp.exec()")]),t._v(" "),a("p",[a("strong",[t._v("目的")]),t._v(":返回一个匹配数组。\n数组的第0项是匹配到的完整子串，\n第1-n项时捕获分组的子串。\n还有index和input两项，分别是完整子串的索引值和原始字符串")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str8 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"The Quick Brown Fox Jumps Over The Lazy Dog"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" reg7 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/quick\\s(brown).+(jumps)/ig")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg7"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str8"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//["Quick Brown Fox Jumps", "Brown", "Jumps", index: 4, input: "The Quick Brown Fox Jumps Over The Lazy Dog", groups:undefined]')]),t._v("\n")])])]),a("h3",{attrs:{id:"str-match"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#str-match"}},[t._v("#")]),t._v(" str.match()")]),t._v(" "),a("p",[a("strong",[t._v("目的")]),t._v(":在字符串中寻找匹配的子串，并以数组的形式返回。"),a("br"),t._v("\n使用时分两种情况，"),a("code",[t._v("有g标识和没有g标识")]),t._v("。"),a("br"),t._v("\n有g标识时，返回一个匹配到所有子串的数组。"),a("br"),t._v("\n没有g标识时，和RegExp.exec()的效果一样。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("找到字符串中的所有数字\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str5 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dgfhfgh254bhd1ku289fgdhdy675gfh"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" reg4 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\d+/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str5"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg4"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//["254", "1", "289", "675"]')]),t._v("\n")])])]),a("h3",{attrs:{id:"str-search"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#str-search"}},[t._v("#")]),t._v(" str.search()")]),t._v(" "),a("p",[a("strong",[t._v("目的")]),t._v(":在目标字符串中匹配子串，如果匹配到，就返回"),a("strong",[t._v("第一次")]),t._v("匹配到的索引，否则返回-1.")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str6 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"This is a Chinese chractor 汉字"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" reg5 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/[\\u4e00-\\u9fa5]/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//匹配单个汉字")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str6"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("search")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg5"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//27")]),t._v("\n")])])]),a("h3",{attrs:{id:"str-replace"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#str-replace"}},[t._v("#")]),t._v(" str.replace()")]),t._v(" "),a("p",[a("strong",[t._v("目的")]),t._v(":将目标字符串中匹配到的子串替换成指定的子串。"),a("br"),t._v("\n返回：新的字符串。"),a("br"),t._v("\n关键注意："),a("strong",[t._v("第二个参数可以是函数。")])]),t._v(" "),a("p",[t._v("实例1：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//字符串去重：aaabbbccc变成abc")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"aaabbbbcccc"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(\\w)\\1+/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/* var result1 = str1.replace(reg1,"$1");*/')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("match"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" p1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("offset"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" p1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//abc")]),t._v("\n")])])]),a("p",[t._v("实例2：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//10000000000 变为10.000.000.000")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1000000000000"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(?=((\\B)(\\w{3})*)$)/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//10.000.000.000")]),t._v("\n")])])]),a("p",[t._v("实例3：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//转小驼峰")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"the-first-name"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/-(\\w)/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("$"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" $"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toUpperCase")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//theFirstName")]),t._v("\n")])])]),a("h3",{attrs:{id:"str-split"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#str-split"}},[t._v("#")]),t._v(" str.split()")]),t._v(" "),a("p",[a("strong",[t._v("目的")]),t._v(":将字符串分割成片段，并以数组形式返回"),a("br"),t._v(" "),a("code",[t._v("第一个参数")]),t._v("指定在哪儿分割，"),a("code",[t._v("第二个参数")]),t._v("指定返回数组的长度")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str7 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"I am test split method"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" reg6 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\s/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str7"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg6"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["I", "am", "test"]')]),t._v("\n")])])]),a("h2",{attrs:{id:"正向断言和负向断言理解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#正向断言和负向断言理解"}},[t._v("#")]),t._v(" 正向断言和负向断言理解")]),t._v(" "),a("p",[a("strong",[t._v("正向断言(?=xxx)")]),t._v(":  目标字符串之后"),a("strong",[t._v("必须")]),t._v("是断言的内容。")]),t._v(" "),a("p",[t._v("比如：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" reg1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/我是(?=中国人)/g")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*该正则的意思是：匹配“我是”目标字符串，且后面“必须”紧跟中国人*/")]),t._v("\n")])])]),a("p",[a("strong",[t._v("负向断言(?!xxx):"),a("strong",[t._v("目标字符串之后")]),t._v("不能")]),t._v("是断言内容，其他任何内容都可以。")]),t._v(" "),a("p",[t._v("比如：")]),t._v(" "),a("div",{staticClass:"language-JavaScript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" reg2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/我是(?!日本人)/g")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*该正则的意思是：匹配“我是”目标字符串，且后面不能是日本人*/")]),t._v("\n")])])]),a("p",[t._v("我们可以把正向断言和负向断言看作是两个"),a("strong",[t._v("条件")]),t._v("："),a("code",[t._v("必须是")]),t._v("和"),a("code",[t._v("不能是")]),t._v("。")]),t._v(" "),a("p",[t._v("对于上面的两个正则，我们可以这么理解：")]),t._v(" "),a("blockquote",[a("p",[t._v("匹配“我是”，"),a("code",[t._v("条件")]),t._v("是"),a("code",[t._v("我是")]),t._v("后面"),a("code",[t._v("必须是")]),t._v("“中国人”，\n匹配“我是”，"),a("code",[t._v("条件")]),t._v("是"),a("code",[t._v("我是")]),t._v("后面"),a("code",[t._v("不能是")]),t._v("“日本人”。")])]),t._v(" "),a("p",[t._v("看如下正则：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" reg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(?=nihao)/g")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("如何理解？")]),t._v(" "),a("p",[t._v('​\t没有匹配内容，但它后面必须是“nihao”。可以解释为：只要后面紧跟"nihao"都被匹配。')])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" reg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(?!nihao)/g")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("如何理解？")]),t._v(" "),a("p",[t._v("​\t没有匹配内容，但它后面不能是“你好”。可以理解为：只要后面不紧跟“nihao”都被匹配。")])])])}),[],!1,null,null,null);s.default=r.exports}}]);